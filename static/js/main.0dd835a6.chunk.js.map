{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","FindMovie","onAdd","onClear","useState","title","setTitle","hasError","setHasError","query","setQuery","onSubmit","event","preventDefault","htmlFor","value","onChange","target","type","id","placeholder","onClick","fetch","then","response","json","getData","App","setMovies","curr","some","current","ReactDOM","render","document","getElementById"],"mappings":"6TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,cCJRC,G,MAA6B,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAClD,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAuB,MAAjD,mBAAOK,EAAP,KAAcC,EAAd,KAmCA,OACE,qCACE,uBACEnB,UAAU,aACVoB,SA3Be,SAACC,GACpBA,EAAMC,iBAEFJ,GACFP,EAAMO,GARRH,EAAS,IACTI,EAAS,OAUPF,GAAY,IAkBZ,UAIE,sBAAKjB,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQuB,QAAQ,cAAjC,yBAIA,qBAAKvB,UAAU,UAAf,SACE,uBACEwB,MAAOV,EACPW,SA/CS,SAACJ,GACpBJ,GAAY,GACZF,EAASM,EAAMK,OAAOF,QA8CZG,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ7B,UAAU,YAGbgB,GACC,mBAAGhB,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE2B,KAAK,SACL3B,UAAU,kBACV8B,QA7CK,YCnCI,SAAChB,GACtB,OAAOiB,MAAM,GAAD,OAHG,8CAGH,OAAejB,IACxBkB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WDkC3BC,CAAQrB,GACLkB,MAAK,SAAAjC,GACAA,EAAMK,MACRe,EAASpB,IAETkB,GAAY,GACZE,EAAS,WAmCP,4BASF,qBAAKnB,UAAU,UAAf,SACE,wBACEA,UAAU,oBACV2B,KAAK,SAFP,kCAQJ,wBACEA,KAAK,SACL3B,UAAU,kBACV8B,QAASlB,EAHX,2BASF,sBAAKZ,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCkB,GACC,cAAC,EAAD,CAAWnB,MAAOmB,YExGfkB,EAAgB,WAC3B,MAA4BvB,mBAAkB,IAA9C,mBAAON,EAAP,KAAe8B,EAAf,KAmBA,OACE,sBAAKrC,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWW,MAvBA,SAACZ,GAChBsC,GAAU,SAAAC,GAIR,OAHqBA,EAAKC,MAAK,SAAAC,GAAO,OAAIA,EAAQ/B,SAC5CV,EAAMU,UAGH6B,EAGH,GAAN,mBAAWA,GAAX,CAAiBvC,QAcaa,QAVhB,kBAChByB,EAAU,aClBdI,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0dd835a6.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { getData } from '../../api';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  onAdd: (movie: Movie) => void;\n  onClear: () => void;\n}\n\nexport const FindMovie: React.FC<Props> = ({ onAdd, onClear }) => {\n  const [title, setTitle] = useState('');\n  const [hasError, setHasError] = useState(false);\n  const [query, setQuery] = useState<Movie | null>(null);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setHasError(false);\n    setTitle(event.target.value);\n  };\n\n  const resetInput = () => {\n    setTitle('');\n    setQuery(null);\n  };\n\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (query) {\n      onAdd(query);\n      resetInput();\n    } else {\n      setHasError(true);\n    }\n  };\n\n  const getMovie = () => {\n    getData(title)\n      .then(movie => {\n        if (movie.Title) {\n          setQuery(movie);\n        } else {\n          setHasError(true);\n          setQuery(null);\n        }\n      });\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              value={title}\n              onChange={handleChange}\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input\"\n            />\n          </div>\n          {hasError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={getMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              className=\"button is-primary\"\n              type=\"submit\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n        <button\n          type=\"button\"\n          className=\"button is-light\"\n          onClick={onClear}\n        >\n          Clear List\n        </button>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {query && (\n          <MovieCard movie={query} />\n        )}\n      </div>\n    </>\n  );\n};\n","const BASE_URL = 'http://www.omdbapi.com/?apikey=18d2cfad&t=';\n\nexport const getData = (title: string) => {\n  return fetch(`${BASE_URL}${title}`)\n    .then(response => response.json());\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    setMovies(curr => {\n      const alreadyExist = curr.some(current => current.imdbID\n        === movie.imdbID);\n\n      if (alreadyExist) {\n        return curr;\n      }\n\n      return [...curr, movie];\n    });\n  };\n\n  const clearList = () => (\n    setMovies([])\n  );\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onAdd={addMovie} onClear={clearList} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}